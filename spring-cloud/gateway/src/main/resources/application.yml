server.port: 8443

spring.application.name: gateway

app:
  auth-server: localhost

spring:
  cloud:
    consul:
      host: 10.9.8.162
      port: 8500
      discovery:
        register: false
        enabled: true
  boot:
    admin:
      client:
        url: http://localhost:8769

spring.cloud.gateway.routes:

- id: product-composite
  uri: lb://product-composite
  predicates:
  - Path=/product-composite/**

- id: oauth-server
  uri: lb://auth-server
  predicates:
    - Path=/oauth/**

- id: product
  uri: lb://product-service
  predicates:
    - Path=/product/**

- id: review
  uri: lb://review-service
  predicates:
    - Path=/review/**
    - Path=/**

- id: host_route_200
  uri: http://httpstat.us
  predicates:
  - Host=i.feel.lucky:8080
  - Path=/headerrouting/**
  filters:
  - SetPath=/200

- id: host_route_418
  uri: http://httpstat.us
  predicates:
  - Host=im.a.teapot:8080
  - Path=/headerrouting/**
  filters:
  - SetPath=/418

- id: host_route_501
  uri: http://httpstat.us
  predicates:
  - Path=/headerrouting/**
  filters:
  - SetPath=/501

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

spring.security.oauth2.resourceserver.jwt.jwk-set-uri: http://${app.auth-server}:9999/.well-known/jwks.json

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: TRACE

---
spring.profiles: docker
app:
  auth-server: auth-server
server.port: 8443

spring:
  boot:
    admin:
      client:
        url: http://admin-server:8769
